cache:
  paths:
    - node_modules/

variables:
  DOCKER_IMAGE: maximeboulle/devops_project
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

stages:
  - build
  - test
  - deploy
  - notify

build-job:
  stage: build
  image: node:18
  script:
    - echo "Compiling the code..."
    - npm ci
    - npm run build
    - echo "Compile complete."

unit-test-job:
  stage: test
  image: node:18
  script:
    - echo "Running unit tests..."
    - npm test
    - echo "Test passed sucessfully"

lint-test-job:
  stage: test
  image: node:18
  script:
    - echo "Linting code..."
    - npm run lint
    - echo "No lint issues found."

deploy-job:
  stage: deploy
  image: docker:latest
  variables:
    DOCKER_HOST: unix:///var/run/docker.sock
  script:
    - echo "Deploying application..."
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker stop app || true
    - docker rm app || true
    - docker run -d -p 8000:80 --name app $DOCKER_IMAGE:$DOCKER_TAG
    - echo "Application successfully deployed."
  only:
    - master

post-deploy-test:
  stage: deploy
  image: curlimages/curl:latest
  script:
    - |
      echo "Checking if application is running..."
      STATUS=$(curl -s -o /dev/null -w "%{http_code}" 192.168.1.159:8000)
      if [ "$STATUS" -eq 200 ]; then
        echo "Application is up and running."
        exit 0
      else
        echo "Application returned status code $STATUS"
        exit 1
      fi
  only:
    - master

notify-success:
  stage: notify
  image: curlimages/curl:latest
  script:
    - |
      curl -H "Content-Type: application/json" \
        -X POST \
        -d "{
          \"embeds\": [{
            \"title\": \"✅ Pipeline Success\",
            \"description\": \"Pipeline completed successfully!\",
            \"color\": 3066993,
            \"fields\": [
              {\"name\": \"Project\", \"value\": \"$CI_PROJECT_NAME\", \"inline\": true},
              {\"name\": \"Branch\", \"value\": \"$CI_COMMIT_REF_NAME\", \"inline\": true},
              {\"name\": \"Commit\", \"value\": \"$CI_COMMIT_SHORT_SHA\", \"inline\": true},
              {\"name\": \"Author\", \"value\": \"$GITLAB_USER_NAME\", \"inline\": true},
              {\"name\": \"Pipeline\", \"value\": \"[#$CI_PIPELINE_ID]($CI_PIPELINE_URL)\", \"inline\": true}
            ],
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
          }]
        }" \
        $DISCORD_WEBHOOK_URL
  when: on_success
  allow_failure: true

notify-failure:
  stage: notify
  image: curlimages/curl:latest
  script:
    - |
      curl -H "Content-Type: application/json" \
        -X POST \
        -d "{
          \"embeds\": [{
            \"title\": \"❌ Pipeline Failed\",
            \"description\": \"Pipeline failed! Please check the logs.\",
            \"color\": 15158332,
            \"fields\": [
              {\"name\": \"Project\", \"value\": \"$CI_PROJECT_NAME\", \"inline\": true},
              {\"name\": \"Branch\", \"value\": \"$CI_COMMIT_REF_NAME\", \"inline\": true},
              {\"name\": \"Commit\", \"value\": \"$CI_COMMIT_SHORT_SHA\", \"inline\": true},
              {\"name\": \"Author\", \"value\": \"$GITLAB_USER_NAME\", \"inline\": true},
              {\"name\": \"Pipeline\", \"value\": \"[#$CI_PIPELINE_ID]($CI_PIPELINE_URL)\", \"inline\": true}
            ],
            \"timestamp\": \"$(date -u +%Y-%m-%dT%H:%M:%S.000Z)\"
          }]
        }" \
        $DISCORD_WEBHOOK_URL
  when: on_failure
  allow_failure: true
